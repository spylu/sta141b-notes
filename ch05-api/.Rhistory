library(httr)
library(tidyverse)
library(jsonlite)
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
random
quotes <- fromJSON(
str_glue("https://quote-garden.herokuapp.com/api/v2/authors/:authorName?page=1&limit=10",
quoteAuthor = "Sloan Wilson"
),
flatten = TRUE
)
quotes
quotes <- fromJSON(
str_glue("https://quote-garden.herokuapp.com/api/v2/authors/:authorName?page=1&limit=10",
$quote$quoteAuthor = "Sloan Wilson"
quotes <- fromJSON(
str_glue("https://quote-garden.herokuapp.com/api/v2/authors/:authorName?page=1&limit=10",
quote$quoteAuthor = "Sloan Wilson"
quotes <- fromJSON(
str_glue("https://quote-garden.herokuapp.com/api/v2/authors/:authorName?page=1&limit=10",
quoteAuthor = "Sloan Wilson"
),
flatten = TRUE
)
quotes
quotes$quotes
# draw two cards
cards <- fromJSON(
str_glue("https://deckofcardsapi.com/api/deck/{deck_id}/draw/?count={count}",
deck_id = deck$deck_id, count = 2
),
flatten = TRUE
)
# this api might not work T_T
# get a deck
deck <- fromJSON("https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1")
deck_id <- deck$deck_id
# draw two cards
cards <- fromJSON(
str_glue("https://deckofcardsapi.com/api/deck/{deck_id}/draw/?count={count}",
deck_id = deck$deck_id, count = 2
),
flatten = TRUE
)
cards
quotes <- fromJSON(
str_glue("https://quote-garden.herokuapp.com/api/v2/authors/:alberteinstein?page=1&limit=10"
),
flatten = TRUE
)
quotes
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
quotes <- fromJSON(URLdecode("https://quote-garden.herokuapp.com/api/v2/authors/:Albert Einstein?page=1&limit=10"))
quotes <- fromJSON(URLdecode("https://quote-garden.herokuapp.com/api/v2/authors/:Albert Einstein?page=1&limit=10"))
?URLdecode
quotes <- fromJSON("https://quote-garden.herokuapp.com/api/v2/authors/:Albert%20Einstein?page=1&limit=10")
quotes
quotes <- fromJSON("quote-garden.herokuapp.com/api/v2/authors/Albert%20Einstein")
quotes <- fromJSON("https://quote-garden.herokuapp.com/api/v2/authors/Albert%20Einstein")
quotes
quotes <- fromJSON("http://quote-garden.herokuapp.com/api/v2/authors/Albert%20Einstein?page=1&limit=null")
quotes
count(quotes$quotes)
einstein <- fromJSON("http://quote-garden.herokuapp.com/api/v2/authors/Albert%20Einstein?page=1&limit=null")
count(einstein)
einstein <- fromJSON("http://quote-garden.herokuapp.com/api/v2/authors/Albert%20Einstein?page=1&limit=null")
count(einstein$quotes)
einstein <- fromJSON("http://quote-garden.herokuapp.com/api/v2/authors/Albert%20Einstein?page=1&limit=null")
einstein
einstein$quotes
uniqe(einstein$quotes)
unique(einstein$quotes)
count(einstein$quotes)
einstein$quotes %>%
summarise(n_distinct)
einstein$quotes %>%
summarise(n_distinct(quotes))
einstein$quotes %>%
summarise(n_distinct(quotes))
einstein
einstein$quoteText %>%
summarise(n_distinct)
einstein$quoteText
summarise(n_distinct(quotes$quoteText)
einstein %>%
einstein$quotes
quotes <- einstein$quotes
quotes$quoteText
quotes %>%
summarise(n_distinct(quoteText))
n = 1
while( n < 1 ){
genre <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/:genreName?page=1&limit=10")
n= n+1 # a counter to keep track of how many iterations were used
if (genre == "education") {
break
}
}
n = 1
while( n < 1 ){
genre <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/:genreName?page=1&limit=10")
n= n+1 # a counter to keep track of how many iterations were used
if (genre == "https://quote-garden.herokuapp.com/api/v2/genre/:genreName?page=1&limit=10") {
break
}
}
genre
n = 1
while(n < 1){
education_genre <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/:{genreName}?page=1&limit=10")
n = n+1 # a counter to keep track of how many iterations were used
if (genreName == "education") {
break
}
}
eduction_genre
n = 1
while(n < 1){
education_genre <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/:{genreName}?page=1&limit=10")
n = n+1 # a counter to keep track of how many iterations were used
if (genreName == "education") {
break
}
}
education_genre
genre <- "x"
while (genre != "education"){
genre <- random$quote$quoteGenre
if(genre != "education"){
genre <- random$quote$quoteGenre
}
else{
break
}
}
genre <- "x"
while (genre != "education"){
genre <- random$quote$quoteGenre
if(genre != "education"){
genre <- random$quote$quoteGenre
}
else{
print(genre)
break
}
}
help <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes")
help
help$quotes
einstein$quotes$quoteGenre
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
random
n = 100
while( n < 100 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quotes$quoteGenre == "education") {
print(education_genre)
break
}
}
n = 100
while( n < 100 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quotes$quoteGenre == "education") {
print(education_genre)
break
}
}
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quotes$quoteGenre == "education") {
print(education_genre)
break
}
}
education_genre
education_genre$quotes$quoteGenre
education_genre$quotes$quote$quoteGenre
education_genre
education_genre$quote$quoteGenre
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == "education") {
print(education_genre)
break
}
}
education_genre$quote$quoteGenre
education_genre
education_genre
education_genre$quote
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == "education", is.narm=TRUE) {
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == is.null) {
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
}
if (education_genre$quote$quoteGenre == "education") {
print(education_genre)
break
}
}
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == "education" & education_genre$quote$quoteGenre != is.na) {
print(education_genre)
break
}
}
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == "education" & is.na(education_genre$quote$quoteGenre) == FALSE {
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == "education" & is.na(education_genre$quote$quoteGenre) == FALSE ){
print(education_genre)
break
}
}
n = 1
while( n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (is.na(education_genre$quote$quoteGenre) == FALSE & education_genre$quote$quoteGenre == "education"){
print(education_genre)
break
}
}
is.na(hello)
is.na('hello')
is.na('hello')==FALSE
n = 1
education_genre$quote$quoteGenre = 1
while(is.na(education_genre$quote$quoteGenre)==FALSE & n < 100000 ){
education_genre = fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
n= n+1 # a counter to keep track of how many iterations were used
if (education_genre$quote$quoteGenre == "education"){
print(education_genre)
break
}
}
education_genre
n = 1
genre = random$quote$quoteGenre
while(genre != 'education' & is.na(genre)==FALSE){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
print(education_genre)
}
n = 1
genre = random$quote$quoteGenre
while(genre != 'education' & is.na(genre)==FALSE){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
print(education_genre)
}
n = 1
genre = random$quote$quoteGenre
while(genre != 'education' & is.na(genre)==FALSE){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
return
}
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
while(is.na(genre)==FALSE){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
if(genre == 'education'){
break
}
else{
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
}
print(random)
}
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
while(is.na(genre)==FALSE){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
if(genre == 'education'){
break
}
else{
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
}
print(random)
}
random
while(random$statusCode != 0){
if(is.na(genre)==TRUE){
return
}
else{
if(genre!='education'){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
return
}
else{
print(random)
}
}
}
genre = random$quote$quoteGenre
genre
is.na(genre)
is.narm(genre)
is.na('hello')
is.na(0)
is.na(1)
is.na(genre)==logical(0)
is.na(genre)!=logical(0)
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
while(random$statusCode != 0){
if(is.na(genre)==logical(0)){
return
}
else{
if(genre!='education'){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
return
}
else{
print(random)
}
}
}
is.na(genre)
genre
genre!=NULL
genre==NULL
genre == 'NULL'
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
while(random$statusCode != 0){
if(genre!='NULL'){
return
}
else{
if(genre!='education'){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
return
}
else{
print(random)
}
}
}
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
while(random$statusCode != 0){
if(genre!='NULL'){
return
}
else{
if(genre!='education'){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
return
}
else{
print(random)
}
}
}
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
genre = random$quote$quoteGenre
while(random$statusCode != 0){
if(genre!='NULL'){
return
}
else{
if(genre!='education'){
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
continue
}
else{
print(random)
}
}
}
random
hello <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/:{genreName}?page=1&limit=10")
hello <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/{:genreName}?page=1&limit=10")
lo <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/{:genreName}?page=1&limit=10")
`:genreName`==art
hello <- fromJSON("https://quote-garden.herokuapp.com/api/v2/genre/{:genreName}?page=1&limit=10")
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
random
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
text = random$quote$quoteText
while(random$quote$id!=0){
if(text=='When performance exceeds ambition, the overlap is called success.'){
print(random)
}
}
random$quote$`_id`
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
text = random$quote$quoteText
while(random$quote$`_id`!=0){
if(text=='When performance exceeds ambition, the overlap is called success.'){
print(random)
}
}
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
text = random$quote$quoteText
while(random$quote$`_id`!=0){
if(text=='When performance exceeds ambition, the overlap is called success.'){
print(random)
}
else{
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
continue
}
}
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
text = random$quote$quoteText
while(random$quote$`_id`!=0){
if(text=='When performance exceeds ambition, the overlap is called success.'){
print(random)
}
else{
random <- fromJSON("https://quote-garden.herokuapp.com/api/v2/quotes/random")
next
}
}
r <- GET(
"https://api.yelp.com/v3/businesses/search",
add_headers(Authorization = paste("Bearer", Sys.getenv("YELP_TOKEN"))),
query = list(
location = "Davis"
)
)
stop_for_status(r)
r <- GET(
"https://api.yelp.com/v3/businesses/search",
add_headers(Authorization = paste("Bearer", Sys.getenv("YELP_TOKEN"))),
query = list(
location = "Davis"
)
)
r
stop_for_status(r)
json <- content(r, as = "text")
fromJSON(json)$businesses %>% select(name)
r
fromJSON(r)
library(usethis)
usethis::edit_r_environ("project")
library(usethis)
usethis::edit_r_environ("project")
usethis::edit_r_environ("YELP_TOKEN")
usethis::edit_r_environ("project")
r <- GET(
"https://api.yelp.com/v3/businesses/search",
add_headers(Authorization = paste("Bearer", Sys.getenv("YELP_TOKEN"))),
query = list(
location = "Davis"
)
)
